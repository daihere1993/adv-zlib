name: Publish to NPM

on:
  workflow_run:
    workflows: ["Auto Version Bump"]
    types: [completed]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main') }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test

      - name: Build package
        run: pnpm build

      - name: Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this version exists on npm
          if npm view adv-zlib@$CURRENT_VERSION version 2>/dev/null; then
            echo "version-exists=true" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION already exists on npm"
          else
            echo "version-exists=false" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION is new, ready to publish"
          fi

      - name: Publish to NPM
        if: steps.version-check.outputs.version-exists == 'false'
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        if: steps.version-check.outputs.version-exists == 'false'
        run: |
          VERSION=v${{ steps.version-check.outputs.current-version }}
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag $VERSION
          git push origin $VERSION

      - name: Create GitHub Release
        if: steps.version-check.outputs.version-exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ steps.version-check.outputs.current-version }}
          release_name: Release v${{ steps.version-check.outputs.current-version }}
          draft: false
          prerelease: false